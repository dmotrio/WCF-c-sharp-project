//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test_wcf_client.WCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utente", Namespace="http://schemas.datacontract.org/2004/07/wcfserver")]
    [System.SerializableAttribute()]
    public partial class Utente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CognomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaldoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome {
            get {
                return this.CognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.CognomeField, value) != true)) {
                    this.CognomeField = value;
                    this.RaisePropertyChanged("Cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Saldo {
            get {
                return this.SaldoField;
            }
            set {
                if ((this.SaldoField.Equals(value) != true)) {
                    this.SaldoField = value;
                    this.RaisePropertyChanged("Saldo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transazione", Namespace="http://schemas.datacontract.org/2004/07/wcfserver")]
    [System.SerializableAttribute()]
    public partial class Transazione : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Id_UtenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_Utente {
            get {
                return this.Id_UtenteField;
            }
            set {
                if ((this.Id_UtenteField.Equals(value) != true)) {
                    this.Id_UtenteField = value;
                    this.RaisePropertyChanged("Id_Utente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Valore {
            get {
                return this.ValoreField;
            }
            set {
                if ((this.ValoreField.Equals(value) != true)) {
                    this.ValoreField = value;
                    this.RaisePropertyChanged("Valore");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registertUser", ReplyAction="http://tempuri.org/IService1/registertUserResponse")]
        string registertUser(test_wcf_client.WCF.Utente utente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registertUser", ReplyAction="http://tempuri.org/IService1/registertUserResponse")]
        System.Threading.Tasks.Task<string> registertUserAsync(test_wcf_client.WCF.Utente utente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtente", ReplyAction="http://tempuri.org/IService1/GetUtenteResponse")]
        test_wcf_client.WCF.Utente GetUtente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUtente", ReplyAction="http://tempuri.org/IService1/GetUtenteResponse")]
        System.Threading.Tasks.Task<test_wcf_client.WCF.Utente> GetUtenteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletUser", ReplyAction="http://tempuri.org/IService1/DeletUserResponse")]
        string DeletUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletUser", ReplyAction="http://tempuri.org/IService1/DeletUserResponse")]
        System.Threading.Tasks.Task<string> DeletUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificaSaldo", ReplyAction="http://tempuri.org/IService1/ModificaSaldoResponse")]
        string ModificaSaldo(int id, float saldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModificaSaldo", ReplyAction="http://tempuri.org/IService1/ModificaSaldoResponse")]
        System.Threading.Tasks.Task<string> ModificaSaldoAsync(int id, float saldo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSaldo", ReplyAction="http://tempuri.org/IService1/GetSaldoResponse")]
        double GetSaldo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSaldo", ReplyAction="http://tempuri.org/IService1/GetSaldoResponse")]
        System.Threading.Tasks.Task<double> GetSaldoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUtente", ReplyAction="http://tempuri.org/IService1/LoginUtenteResponse")]
        int LoginUtente(string nome, string cognome, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUtente", ReplyAction="http://tempuri.org/IService1/LoginUtenteResponse")]
        System.Threading.Tasks.Task<int> LoginUtenteAsync(string nome, string cognome, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTransazione", ReplyAction="http://tempuri.org/IService1/InsertTransazioneResponse")]
        string InsertTransazione(test_wcf_client.WCF.Transazione transazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTransazione", ReplyAction="http://tempuri.org/IService1/InsertTransazioneResponse")]
        System.Threading.Tasks.Task<string> InsertTransazioneAsync(test_wcf_client.WCF.Transazione transazione);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransazioniByIdUtente", ReplyAction="http://tempuri.org/IService1/TransazioniByIdUtenteResponse")]
        test_wcf_client.WCF.Transazione[] TransazioniByIdUtente(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransazioniByIdUtente", ReplyAction="http://tempuri.org/IService1/TransazioniByIdUtenteResponse")]
        System.Threading.Tasks.Task<test_wcf_client.WCF.Transazione[]> TransazioniByIdUtenteAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : test_wcf_client.WCF.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<test_wcf_client.WCF.IService1>, test_wcf_client.WCF.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string registertUser(test_wcf_client.WCF.Utente utente) {
            return base.Channel.registertUser(utente);
        }
        
        public System.Threading.Tasks.Task<string> registertUserAsync(test_wcf_client.WCF.Utente utente) {
            return base.Channel.registertUserAsync(utente);
        }
        
        public test_wcf_client.WCF.Utente GetUtente(int id) {
            return base.Channel.GetUtente(id);
        }
        
        public System.Threading.Tasks.Task<test_wcf_client.WCF.Utente> GetUtenteAsync(int id) {
            return base.Channel.GetUtenteAsync(id);
        }
        
        public string DeletUser(int id) {
            return base.Channel.DeletUser(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletUserAsync(int id) {
            return base.Channel.DeletUserAsync(id);
        }
        
        public string ModificaSaldo(int id, float saldo) {
            return base.Channel.ModificaSaldo(id, saldo);
        }
        
        public System.Threading.Tasks.Task<string> ModificaSaldoAsync(int id, float saldo) {
            return base.Channel.ModificaSaldoAsync(id, saldo);
        }
        
        public double GetSaldo(int id) {
            return base.Channel.GetSaldo(id);
        }
        
        public System.Threading.Tasks.Task<double> GetSaldoAsync(int id) {
            return base.Channel.GetSaldoAsync(id);
        }
        
        public int LoginUtente(string nome, string cognome, string password) {
            return base.Channel.LoginUtente(nome, cognome, password);
        }
        
        public System.Threading.Tasks.Task<int> LoginUtenteAsync(string nome, string cognome, string password) {
            return base.Channel.LoginUtenteAsync(nome, cognome, password);
        }
        
        public string InsertTransazione(test_wcf_client.WCF.Transazione transazione) {
            return base.Channel.InsertTransazione(transazione);
        }
        
        public System.Threading.Tasks.Task<string> InsertTransazioneAsync(test_wcf_client.WCF.Transazione transazione) {
            return base.Channel.InsertTransazioneAsync(transazione);
        }
        
        public test_wcf_client.WCF.Transazione[] TransazioniByIdUtente(int Id) {
            return base.Channel.TransazioniByIdUtente(Id);
        }
        
        public System.Threading.Tasks.Task<test_wcf_client.WCF.Transazione[]> TransazioniByIdUtenteAsync(int Id) {
            return base.Channel.TransazioniByIdUtenteAsync(Id);
        }
    }
}
